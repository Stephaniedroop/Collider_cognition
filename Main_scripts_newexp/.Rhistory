"3_d1"="A=0,B=0,E=0",
"3_d2"="A=0,B=1,E=0",
"3_d3"="A=0,B=1,E=1",
"3_d4"="A=1,B=0,E=0",
"3_d5"="A=1,B=0,E=1",
"3_d6"="A=1,B=1,E=0",
"3_d7"="A=1,B=1,E=1")
df$trial_structure_type <- recode(df$trial_id,
"1_c1"="Conjunctive: A=0,B=0,E=0",
"1_c2"="Conjunctive: A=0,B=1,E=0",
"1_c3"="Conjunctive: A=1,B=0,E=0",
"1_c4"="Conjunctive: A=1,B=1,E=0",
"1_c5"="Conjunctive: A=1,B=1,E=1",
"1_d1"="Disjunctive: A=0,B=0,E=0",
"1_d2"="Disjunctive: A=0,B=1,E=0",
"1_d3"="Disjunctive: A=0,B=1,E=1",
"1_d4"="Disjunctive: A=1,B=0,E=0",
"1_d5"="Disjunctive: A=1,B=0,E=1",
"1_d6"="Disjunctive: A=1,B=1,E=0",
"1_d7"="Disjunctive: A=1,B=1,E=1",
"2_c1"="Conjunctive: A=0,B=0,E=0",
"2_c2"="Conjunctive: A=0,B=1,E=0",
"2_c3"="Conjunctive: A=1,B=0,E=0",
"2_c4"="Conjunctive: A=1,B=1,E=0",
"2_c5"="Conjunctive: A=1,B=1,E=1",
"2_d1"="Disjunctive: A=0,B=0,E=0",
"2_d2"="Disjunctive: A=0,B=1,E=0",
"2_d3"="Disjunctive: A=0,B=1,E=1",
"2_d4"="Disjunctive: A=1,B=0,E=0",
"2_d5"="Disjunctive: A=1,B=0,E=1",
"2_d6"="Disjunctive: A=1,B=1,E=0",
"2_d7"="Disjunctive: A=1,B=1,E=1",
"3_c1"="Conjunctive: A=0,B=0,E=0",
"3_c2"="Conjunctive: A=0,B=1,E=0",
"3_c3"="Conjunctive: A=1,B=0,E=0",
"3_c4"="Conjunctive: A=1,B=1,E=0",
"3_c5"="Conjunctive: A=1,B=1,E=1",
"3_d1"="Disjunctive: A=0,B=0,E=0",
"3_d2"="Disjunctive: A=0,B=1,E=0",
"3_d3"="Disjunctive: A=0,B=1,E=1",
"3_d4"="Disjunctive: A=1,B=0,E=0",
"3_d5"="Disjunctive: A=1,B=0,E=1",
"3_d6"="Disjunctive: A=1,B=1,E=0",
"3_d7"="Disjunctive: A=1,B=1,E=1")
df<- df %>% mutate(trial_type = factor(trial_type, levels = c("A=0,B=0,E=0",
"A=0,B=1,E=0",
"A=0,B=1,E=1",
"A=1,B=0,E=0",
"A=1,B=0,E=1",
"A=1,B=1,E=0",
"A=1,B=1,E=1")),
trial_structure_type = factor(trial_structure_type, levels = c("Conjunctive: A=1,B=1,E=1",
"Conjunctive: A=1,B=1,E=0",
"Conjunctive: A=1,B=0,E=0",
"Conjunctive: A=0,B=1,E=0",
"Conjunctive: A=0,B=0,E=0",
"Disjunctive: A=0,B=1,E=0",
"Disjunctive: A=1,B=1,E=1",
"Disjunctive: A=1,B=0,E=1",
"Disjunctive: A=0,B=1,E=1",
"Disjunctive: A=1,B=1,E=0",
"Disjunctive: A=1,B=0,E=0",
"Disjunctive: A=0,B=0,E=0")),
# NOTE THESE (ABOVE) LOOK IN THE WRONG ORDER BUT ITS JUST FOR THE PLOT
pgroup = factor(pgroup, levels = 1:3, labels = c('A=.1,Au=.5,B=.8,Bu=.5',
'A=.5,Au=.1,B=.5,Bu=.8',
'A=.1,Au=.7,B=.8,Bu=.5')),
Response = factor(node3),
Observed = factor(!Response%in%c('Au=0','Au=1','Bu=0', 'Bu=1'), levels = c(T,F)),
Variable = factor(substr(node3, 1, 1)),
#State = factor(rep(c(0,1), 144)),
Actual = factor(Actual, levels = c(FALSE, TRUE), labels = c('FALSE', 'TRUE')))
models <- c('full',
'noAct',
'noInf',
'noSelect',
'noActnoInf',
'noActnoSelect',
'noInfnoSelect',
'noActnoInfnoSelect',
'noKind',
'noActnoKind',
'noInfnoKind',
'noKindnoSelect',
'noActnoInfnoKind',
'noActnoKindnoSelect',
'noInfnoKindnoSelect',
'noActnoInfnoKindnoSelect')
pgroups <- levels(df$pgroup)
# Define plotting function
plot_model_pgroup <- function(model_colname, pgroup_label, df) {
df_filtered <- df %>% filter(pgroup == pgroup_label)
ggplot(df_filtered, aes(x = node3, y = .data[[model_colname]], fill = Observed, colour = Actual)) +
geom_bar(stat = 'identity') +
#geom_errorbar(aes(ymin = prop-SE, ymax = prop+SE), width = .2) +
labs(
x = 'Response',
y = 'Proportion/Prediction',
title = sprintf("%s : %s", model_colname, pgroup_label)
) +
scale_fill_brewer(palette = "Set2") +
scale_colour_manual(values = c('gray', 'black')) +
#geom_point(aes(y = .data[[model_colname]]), colour = 'black') +
geom_rect(
data = subset(df_filtered, trial_structure_type %in% c("Conjunctive: A=1,B=1,E=1", "Disjunctive: A=1,B=1,E=1")),
fill = NA, colour = "blue", xmin = -Inf, xmax = Inf, linewidth = 2,
ymin = -Inf, ymax = Inf
) +
facet_wrap(~trial_structure_type, ncol = 6) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.margin = margin(c(0, 0, 0, 0)),
axis.title.x = element_text(margin = margin(t = 1, r = 0, b = 0, l = 0)),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5)
)
}
for (model in models) {
for (pgroup in pgroups) {
print(plot_model_pgroup(model, pgroup, df))
}
}
View(df)
?recode
View(diff)
View(df)
View(dfold)
df <- read.csv('../model_data/fitforplot16m.csv')
dfold <- read.csv('../model_data/fitforplot16mOLDEXP.csv')
View(df)
View(dfold)
df$prop <- df[21]-dfold[21]
df <- read.csv('../model_data/fitforplot16m.csv')
dfold <- read.csv('../model_data/fitforplot16mOLDEXP.csv')
df[21] <- df[21]-dfold[21]
df <- read.csv('fitforplot16m.csv') # 288 obs of 27 vars - only the actual values of A/B
df$trial_type <- recode(df$trial_id,
"1_c1"="A=0,B=0,E=0",
"1_c2"="A=0,B=1,E=0",
"1_c3"="A=1,B=0,E=0",
"1_c4"="A=1,B=1,E=0",
"1_c5"="A=1,B=1,E=1",
"1_d1"="A=0,B=0,E=0",
"1_d2"="A=0,B=1,E=0",
"1_d3"="A=0,B=1,E=1",
"1_d4"="A=1,B=0,E=0",
"1_d5"="A=1,B=0,E=1",
"1_d6"="A=1,B=1,E=0",
"1_d7"="A=1,B=1,E=1",
"2_c1"="A=0,B=0,E=0",
"2_c2"="A=0,B=1,E=0",
"2_c3"="A=1,B=0,E=0",
"2_c4"="A=1,B=1,E=0",
"2_c5"="A=1,B=1,E=1",
"2_d1"="A=0,B=0,E=0",
"2_d2"="A=0,B=1,E=0",
"2_d3"="A=0,B=1,E=1",
"2_d4"="A=1,B=0,E=0",
"2_d5"="A=1,B=0,E=1",
"2_d6"="A=1,B=1,E=0",
"2_d7"="A=1,B=1,E=1",
"3_c1"="A=0,B=0,E=0",
"3_c2"="A=0,B=1,E=0",
"3_c3"="A=1,B=0,E=0",
"3_c4"="A=1,B=1,E=0",
"3_c5"="A=1,B=1,E=1",
"3_d1"="A=0,B=0,E=0",
"3_d2"="A=0,B=1,E=0",
"3_d3"="A=0,B=1,E=1",
"3_d4"="A=1,B=0,E=0",
"3_d5"="A=1,B=0,E=1",
"3_d6"="A=1,B=1,E=0",
"3_d7"="A=1,B=1,E=1")
df$trial_structure_type <- recode(df$trial_id,
"1_c1"="Conjunctive: A=0,B=0,E=0",
"1_c2"="Conjunctive: A=0,B=1,E=0",
"1_c3"="Conjunctive: A=1,B=0,E=0",
"1_c4"="Conjunctive: A=1,B=1,E=0",
"1_c5"="Conjunctive: A=1,B=1,E=1",
"1_d1"="Disjunctive: A=0,B=0,E=0",
"1_d2"="Disjunctive: A=0,B=1,E=0",
"1_d3"="Disjunctive: A=0,B=1,E=1",
"1_d4"="Disjunctive: A=1,B=0,E=0",
"1_d5"="Disjunctive: A=1,B=0,E=1",
"1_d6"="Disjunctive: A=1,B=1,E=0",
"1_d7"="Disjunctive: A=1,B=1,E=1",
"2_c1"="Conjunctive: A=0,B=0,E=0",
"2_c2"="Conjunctive: A=0,B=1,E=0",
"2_c3"="Conjunctive: A=1,B=0,E=0",
"2_c4"="Conjunctive: A=1,B=1,E=0",
"2_c5"="Conjunctive: A=1,B=1,E=1",
"2_d1"="Disjunctive: A=0,B=0,E=0",
"2_d2"="Disjunctive: A=0,B=1,E=0",
"2_d3"="Disjunctive: A=0,B=1,E=1",
"2_d4"="Disjunctive: A=1,B=0,E=0",
"2_d5"="Disjunctive: A=1,B=0,E=1",
"2_d6"="Disjunctive: A=1,B=1,E=0",
"2_d7"="Disjunctive: A=1,B=1,E=1",
"3_c1"="Conjunctive: A=0,B=0,E=0",
"3_c2"="Conjunctive: A=0,B=1,E=0",
"3_c3"="Conjunctive: A=1,B=0,E=0",
"3_c4"="Conjunctive: A=1,B=1,E=0",
"3_c5"="Conjunctive: A=1,B=1,E=1",
"3_d1"="Disjunctive: A=0,B=0,E=0",
"3_d2"="Disjunctive: A=0,B=1,E=0",
"3_d3"="Disjunctive: A=0,B=1,E=1",
"3_d4"="Disjunctive: A=1,B=0,E=0",
"3_d5"="Disjunctive: A=1,B=0,E=1",
"3_d6"="Disjunctive: A=1,B=1,E=0",
"3_d7"="Disjunctive: A=1,B=1,E=1")
df<- df %>% mutate(trial_type = factor(trial_type, levels = c("A=0,B=0,E=0",
"A=0,B=1,E=0",
"A=0,B=1,E=1",
"A=1,B=0,E=0",
"A=1,B=0,E=1",
"A=1,B=1,E=0",
"A=1,B=1,E=1")),
trial_structure_type = factor(trial_structure_type, levels = c("Conjunctive: A=1,B=1,E=1",
"Conjunctive: A=1,B=1,E=0",
"Conjunctive: A=1,B=0,E=0",
"Conjunctive: A=0,B=1,E=0",
"Conjunctive: A=0,B=0,E=0",
"Disjunctive: A=0,B=1,E=0",
"Disjunctive: A=1,B=1,E=1",
"Disjunctive: A=1,B=0,E=1",
"Disjunctive: A=0,B=1,E=1",
"Disjunctive: A=1,B=1,E=0",
"Disjunctive: A=1,B=0,E=0",
"Disjunctive: A=0,B=0,E=0")),
# NOTE THESE (ABOVE) LOOK IN THE WRONG ORDER BUT ITS JUST FOR THE PLOT
pgroup = factor(pgroup, levels = 1:3, labels = c('A=.1,Au=.5,B=.8,Bu=.5',
'A=.5,Au=.1,B=.5,Bu=.8',
'A=.1,Au=.7,B=.8,Bu=.5')),
Response = factor(node3),
Observed = factor(!Response%in%c('Au=0','Au=1','Bu=0', 'Bu=1'), levels = c(T,F)),
Variable = factor(substr(node3, 1, 1)),
#State = factor(rep(c(0,1), 144)),
Actual = factor(Actual, levels = c(FALSE, TRUE), labels = c('FALSE', 'TRUE')))
models <- c('full',
'noAct',
'noInf',
'noSelect',
'noActnoInf',
'noActnoSelect',
'noInfnoSelect',
'noActnoInfnoSelect',
'noKind',
'noActnoKind',
'noInfnoKind',
'noKindnoSelect',
'noActnoInfnoKind',
'noActnoKindnoSelect',
'noInfnoKindnoSelect',
'noActnoInfnoKindnoSelect')
pgroups <- levels(df$pgroup)
# Define plotting function
plot_model_pgroup <- function(model_colname, pgroup_label, df) {
df_filtered <- df %>% filter(pgroup == pgroup_label)
ggplot(df_filtered, aes(x = node3, y = prop, fill = Observed, colour = Actual)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = prop-SE, ymax = prop+SE), width = .2) +
labs(
x = 'Response',
y = 'Proportion/Prediction',
title = sprintf("%s : %s", model_colname, pgroup_label)
) +
scale_fill_brewer(palette = "Set2") +
scale_colour_manual(values = c('gray', 'black')) +
geom_point(aes(y = .data[[model_colname]]), colour = 'black') +
geom_rect(
data = subset(df_filtered, trial_structure_type %in% c("Conjunctive: A=1,B=1,E=1", "Disjunctive: A=1,B=1,E=1")),
fill = NA, colour = "blue", xmin = -Inf, xmax = Inf, linewidth = 2,
ymin = -Inf, ymax = Inf
) +
facet_wrap(~trial_structure_type, ncol = 6) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.margin = margin(c(0, 0, 0, 0)),
axis.title.x = element_text(margin = margin(t = 1, r = 0, b = 0, l = 0)),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5)
)
}
df.l <- df %>% gather(key, val, prop:full) %>% mutate(key = factor(key, levels = c('prop', 'full'),
labels = c("Participants", "Full Model"))) %>%
group_by(Observed, key, trial_structure_type) %>% summarise(val = sum(val)/3)
df.l <- df.l %>% filter(!is.na(key))
ggplot(df.l, aes(y=val, x=key, fill=Observed)) +
stat_summary(fun.y = mean,
geom = "bar",
position = position_dodge(), colour = 'black') +
stat_summary(fun.data = mean_se, geom = "errorbar",  position = position_dodge(.9), width = .2)+
labs(x = 'Response', y = 'Proportion/Prediction') +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.margin=margin(c(0,0,0,0)),
#legend.position = c(-.1,-.2),
axis.title.x = element_text(margin = margin(t = 1, r =0, b = 0, l = 0)))
ggsave('results_obs_un.pdf', width = 7, height = 5)
View(df.l)
View(df)
df$structure <- ifelse(substr(df$trial_id, 3, 3) == "c", "conjunctive",
ifelse(substr(df$trial_id, 3, 3) == "d", "disjunctive", NA))
View(df)
df.l <- df %>% gather(key, val, prop:full) %>% mutate(key = factor(key, levels = c('prop', 'full'),
labels = c("Participants", "Full Model"))) %>%
group_by(Observed, key, structure) %>% summarise(val = sum(val)/3)
View(df.l)
df.l <- df.l %>% filter(!is.na(key))
View(df.l)
ggplot(df.l, aes(y=val, x=key, fill=Observed)) +
stat_summary(fun.y = mean,
geom = "bar",
position = position_dodge(), colour = 'black') +
stat_summary(fun.data = mean_se, geom = "errorbar",  position = position_dodge(.9), width = .2)+
labs(x = 'Response', y = 'Proportion/Prediction') +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.margin=margin(c(0,0,0,0)),
#legend.position = c(-.1,-.2),
axis.title.x = element_text(margin = margin(t = 1, r =0, b = 0, l = 0)))
View(df.l)
df.l <- df %>% gather(key, val, prop:full) %>% mutate(key = factor(key, levels = c('prop', 'full'),
labels = c("Participants", "Full Model"))) %>%
group_by(Observed, key, trial_structure_type) %>% summarise(val = sum(val)/3)
df.l <- df.l %>% filter(!is.na(key))
View(df.l)
View(df.l)
# Now same thing for structure only
df.s <- df %>% gather(key, val, prop:full) %>% mutate(key = factor(key, levels = c('prop', 'full'),
labels = c("Participants", "Full Model"))) %>%
group_by(Observed, key, structure) %>% summarise(val = sum(val))
View(df.s)
# 48 obs of 4 - that is: 2(obs/un) * 2(ppts/full) * 12 trialtypes
df.l <- df %>% gather(key, val, prop:full) %>% mutate(key = factor(key, levels = c('prop', 'full'),
labels = c("Participants", "Full Model"))) %>%
group_by(Observed, key, trial_structure_type) %>% summarise(val = sum(val)/length(val))
View(df.s)
# Now same thing for structure only
df.s <- df %>% gather(key, val, prop:full) %>% mutate(key = factor(key, levels = c('prop', 'full'),
labels = c("Participants", "Full Model"))) %>%
group_by(Observed, key, structure) %>% summarise(val = sum(val)/length(val))
View(df.s)
# Now same thing for structure only
df.s <- df %>% gather(key, val, prop:full) %>% mutate(key = factor(key, levels = c('prop', 'full'),
labels = c("Participants", "Full Model"))) %>%
group_by(Observed, key, structure) %>% summarise(val = sum(val)/3)
View(df.s)
# Now same thing for structure only
df.s <- df %>% gather(key, val, prop:full) %>% mutate(key = factor(key, levels = c('prop', 'full'),
labels = c("Participants", "Full Model"))) %>%
group_by(Observed, key, structure) %>% summarise(val = sum(val)/3)
View(df.s)
df.l <- df.l %>% filter(!is.na(key))
df.s <- df.s %>% filter(!is.na(key))
View(df.s)
View(df.s)
ggplot(df.s, aes(y=val, x=key, fill=Observed, colour=structure)) +
stat_summary(fun.y = mean,
geom = "bar",
position = position_dodge(), colour = 'black') +
stat_summary(fun.data = mean_se, geom = "errorbar",  position = position_dodge(.9), width = .2)+
labs(x = 'Response', y = 'Proportion/Prediction') +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.margin=margin(c(0,0,0,0)),
#legend.position = c(-.1,-.2),
axis.title.x = element_text(margin = margin(t = 1, r =0, b = 0, l = 0)))
View(df.s)
ggplot(df.s, aes(y=val, x=key, fill=Observed)) +
stat_summary(fun.y = mean,
geom = "bar",
position = position_dodge(), colour = 'black') +
stat_summary(fun.data = mean_se, geom = "errorbar",  position = position_dodge(.9), width = .2)+
labs(x = 'Response', y = 'Proportion/Prediction') +
facet_wrap(~structure) +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.margin=margin(c(0,0,0,0)),
#legend.position = c(-.1,-.2),
axis.title.x = element_text(margin = margin(t = 1, r =0, b = 0, l = 0)))
View(df.s)
df.s$val <- ifelse(structure == "conjunctive", val/5,
ifelse(structure == "disjunctive", val/7, NA))
str(df.s)
df.s$val <- ifelse(df$structure == "conjunctive", val/5,
ifelse(df$structure == "disjunctive", val/7, NA))
df.s$val <- ifelse(df.s$structure == "conjunctive", df.s$val/5,
ifelse(df.s$structure == "disjunctive", df.s$val/7, NA))
View(df.s)
ggplot(df.s, aes(y=val, x=key, fill=Observed)) +
stat_summary(fun.y = mean,
geom = "bar",
position = position_dodge(), colour = 'black') +
stat_summary(fun.data = mean_se, geom = "errorbar",  position = position_dodge(.9), width = .2)+
labs(x = 'Response', y = 'Proportion/Prediction') +
facet_wrap(~structure) +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.margin=margin(c(0,0,0,0)),
#legend.position = c(-.1,-.2),
axis.title.x = element_text(margin = margin(t = 1, r =0, b = 0, l = 0)))
View(df.s)
View(df.s)
# Now same thing for structure only
df.s <- df %>% gather(key, val, prop:full) %>% mutate(key = factor(key, levels = c('prop', 'full'),
labels = c("Participants", "Full Model"))) %>%
group_by(Observed, key, structure, E) %>% summarise(val = sum(val)/3)
df.s <- df.s %>% filter(!is.na(key))
View(df.s)
df.s$val <- ifelse(df.s$structure == "conjunctive", df.s$val/5,
ifelse(df.s$structure == "disjunctive", df.s$val/7, NA))
View(df.s)
df.s$struct_effect <- paste0(df.s$structure, df.s$E)
View(df.s)
df %>% group_by(structure, E) %>% summarise(n=n())
# Now same thing for structure only
df.s <- df %>% gather(key, val, prop:full) %>% mutate(key = factor(key, levels = c('prop', 'full'),
labels = c("Participants", "Full Model"))) %>%
group_by(Observed, key, structure, E) %>% summarise(val = sum(val)/3)
df.s <- df.s %>% filter(!is.na(key))
df.s$struct_effect <- paste0(df.s$structure, df.s$E)
# This is for with no Effect, use a different line for when include effect
df.s$val <- ifelse(df.s$structure == "conjunctive", df.s$val/5,
ifelse(df.s$structure == "disjunctive", df.s$val/7, NA))
# Better
df.s$val <- ifelse(df.s$struct_effect == "conjunctive0", df.s$val/4,
ifelse(df.s$struct_effect == "disjunctive0", df.s$val/4,
ifelse(df.s$struct_effect == "disjunctive1", df.s$val/3, df.s$val)))
View(df.s)
# Now same thing for structure only
df.s <- df %>% gather(key, val, prop:full) %>% mutate(key = factor(key, levels = c('prop', 'full'),
labels = c("Participants", "Full Model"))) %>%
group_by(Observed, key, structure, E) %>% summarise(val = sum(val)/3)
df.s <- df.s %>% filter(!is.na(key))
df.s$struct_effect <- paste0(df.s$structure, df.s$E)
# This is for with no Effect, use a different line for when include effect
#df.s$val <- ifelse(df.s$structure == "conjunctive", df.s$val/5,
#ifelse(df.s$structure == "disjunctive", df.s$val/7, NA))
# Better
df.s$val <- ifelse(df.s$struct_effect == "conjunctive0", df.s$val/4,
ifelse(df.s$struct_effect == "disjunctive0", df.s$val/4,
ifelse(df.s$struct_effect == "disjunctive1", df.s$val/3, df.s$val)))
View(df.s)
ggplot(df.s, aes(y=val, x=key, fill=Observed)) +
stat_summary(fun.y = mean,
geom = "bar",
position = position_dodge(), colour = 'black') +
stat_summary(fun.data = mean_se, geom = "errorbar",  position = position_dodge(.9), width = .2)+
labs(x = 'Response', y = 'Proportion/Prediction') +
facet_grid(structure ~ E) +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.margin=margin(c(0,0,0,0)),
#legend.position = c(-.1,-.2),
axis.title.x = element_text(margin = margin(t = 1, r =0, b = 0, l = 0)))
# Now same thing for structure only
df.s2 <- df %>% gather(key, val, prop:noKind) %>% mutate(key = factor(key, levels = c('prop', 'noKind'),
labels = c("Participants", "noKind Model"))) %>%
group_by(Observed, key, structure, E) %>% summarise(val = sum(val)/3)
df.s2 <- df.s2 %>% filter(!is.na(key))
df.s2$struct_effect <- paste0(df.s2$structure, df.s2$E)
# This is for with no Effect, use a different line for when include effect
#df.s$val <- ifelse(df.s$structure == "conjunctive", df.s$val/5,
#ifelse(df.s$structure == "disjunctive", df.s$val/7, NA))
# Better
df.s2$val <- ifelse(df.s2$struct_effect == "conjunctive0", df.s2$val/4,
ifelse(df.s2$struct_effect == "disjunctive0", df.s2$val/4,
ifelse(df.s2$struct_effect == "disjunctive1", df.s2$val/3, df.s2$val)))
View(df.s2)
ggplot(df.s2, aes(y=val, x=key, fill=Observed)) +
stat_summary(fun.y = mean,
geom = "bar",
position = position_dodge(), colour = 'black') +
stat_summary(fun.data = mean_se, geom = "errorbar",  position = position_dodge(.9), width = .2)+
labs(x = 'Response', y = 'Proportion/Prediction') +
facet_grid(structure ~ E) +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.margin=margin(c(0,0,0,0)),
#legend.position = c(-.1,-.2),
axis.title.x = element_text(margin = margin(t = 1, r =0, b = 0, l = 0)))
ggplot(df.s2, aes(y=val, x=key, fill=Observed)) +
stat_summary(fun.y = mean,
geom = "bar",
position = position_dodge(), colour = 'black') +
stat_summary(fun.data = mean_se, geom = "errorbar",  position = position_dodge(.9), width = .2)+
labs(x = 'Response', y = 'Proportion/Prediction', title = 'noKind model') +
facet_grid(structure ~ E) +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.margin=margin(c(0,0,0,0)),
#legend.position = c(-.1,-.2),
axis.title.x = element_text(margin = margin(t = 1, r =0, b = 0, l = 0)))
