stat_summary(fun.data = mean_se, geom = "errorbar",  position = position_dodge(.9), width = .2) +
labs(x = "Response", y = "Proportion/Prediction", fill = "Variable type") +
scale_fill_discrete(labels = c("Observed \n(A|B)", "Unobserved \n(Au|Bu)")) +
theme_bw() +
theme(panel.grid = element_blank(),
legend.text = element_text(size = 10),  # here thats 'noSelect Model'
legend.title = element_text(size = 10))
print(punnk)
View(df.l)
# 1. Gather and calculate mean and SE per group
df_long <- df %>%
gather(key, val, prop:noKind) %>%
filter(!is.na(val)) %>%
mutate(key = factor(key, levels = c("prop", "noKind"),
labels = c("Participants", "Model")))
View(df_long)
View(df)
# 1. Gather and calculate mean and SE per group
df_long <- df %>%
select(trial_id, node3, prop, noKind, Observed, SE) %>%
gather(key, val, prop:noKind) %>%
filter(!is.na(val)) %>%
mutate(key = factor(key, levels = c("prop", "noKind"),
labels = c("Participants", "Model")))
View(df_long)
# 1. Gather and calculate mean and SE per group
df_long <- df %>%
select(trial_id, node3, prop, noKind, Observed) %>%
gather(key, val, prop:noKind) %>%
filter(!is.na(val)) %>%
mutate(key = factor(key, levels = c("prop", "noKind"),
labels = c("Participants", "Model")))
summary_df <- df_long %>%
group_by(Observed, key) %>%
summarise(
mean_val = mean(val),
se = sd(val) / sqrt(n())
) %>%
ungroup()
View(summary_df)
summary_df <- df_long %>%
group_by(Observed, key) %>%
summarise(
val = sum(val),
se = sd(val) / sqrt(n())
) %>%
ungroup()
View(summary_df)
summary_df <- df_long %>%
group_by(Observed, key) %>%
summarise(
val = sum(val)/36,
se = sd(val) / sqrt(n())
) %>%
ungroup()
View(summary_df)
# 1. Gather and calculate mean and SE per group
df_long <- df %>%
select(trial_id, node3, prop, noKind, Observed) %>%
gather(key, val, prop:noKind) %>%
filter(!is.na(val)) %>%
mutate(key = factor(key, levels = c("prop", "noKind"),
labels = c("Participants", "Model")))
summary_df <- df_long %>%
group_by(Observed, key) %>%
summarise(
val_sum = sum(val),
se = sd(val) / sqrt(n())
) %>%
mutate(val = val_sum / 36) %>%
select(-val_sum) %>%
ungroup()
View(summary_df)
# 2. Plot with bars and error bars
punnk <- ggplot(summary_df, aes(x = key, y = mean_val, fill = Observed)) +
geom_bar(stat = "identity", position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = mean_val - se, ymax = mean_val + se),
width = 0.2, position = position_dodge(0.9)) +
labs(x = "Response", y = "Proportion/Prediction", fill = "Variable type") +
scale_fill_discrete(labels = c("Observed \n(A|B)", "Unobserved \n(Au|Bu)")) +
theme_bw() +
theme(panel.grid = element_blank(),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10))
print(punnk)
# 2. Plot with bars and error bars
punnk <- ggplot(summary_df, aes(x = key, y = val, fill = Observed)) +
geom_bar(stat = "identity", position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = val - se, ymax = val + se),
width = 0.2, position = position_dodge(0.9)) +
labs(x = "Response", y = "Proportion/Prediction", fill = "Variable type") +
scale_fill_discrete(labels = c("Observed \n(A|B)", "Unobserved \n(Au|Bu)")) +
theme_bw() +
theme(panel.grid = element_blank(),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10))
print(punnk)
str(df)
# 2. Plot with bars and error bars
punnk <- ggplot(summary_df, aes(x = key, y = val, fill = Observed)) +
geom_bar(stat = "identity", position = position_dodge(0.9)) +
geom_errorbar(aes(ymin = val - se, ymax = val + se),
width = 0.2, position = position_dodge(0.9)) +
labs(x = "Response", y = "Proportion/Prediction", fill = "Variable type") +
scale_fill_brewer(palette = "Set2", labels = c("Observed \n(A|B)", "Unobserved \n(Au|Bu)")) +
#scale_fill_discrete(labels = c("Observed \n(A|B)", "Unobserved \n(Au|Bu)")) +
theme_bw() +
theme(panel.grid = element_blank(),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10))
print(punnk)
getwd()
df <- read.csv(params$data_file) # 288 obs of 27 vars - only the actual values of A/B
# SOME STRINGS FOR NAMING PLOTS ETC
filename <- params$data_file
# Extract the basename (file name only, no path)
basestring <- basename(filename)
# Remove the ".csv" extension and get the last two letters before it
last_two <- substr(sub("\\.csv$", "", basestring), nchar(basestring) - 5, nchar(basestring) - 3)
df$structure <- ifelse(substr(df$trial_id, 3, 3) == "c", "conjunctive",
ifelse(substr(df$trial_id, 3, 3) == "d", "disjunctive", NA))
df$trial_type <- recode(df$trial_id,
"1_c1"="A=0,B=0,E=0",
"1_c2"="A=0,B=1,E=0",
"1_c3"="A=1,B=0,E=0",
"1_c4"="A=1,B=1,E=0",
"1_c5"="A=1,B=1,E=1",
"1_d1"="A=0,B=0,E=0",
"1_d2"="A=0,B=1,E=0",
"1_d3"="A=0,B=1,E=1",
"1_d4"="A=1,B=0,E=0",
"1_d5"="A=1,B=0,E=1",
"1_d6"="A=1,B=1,E=0",
"1_d7"="A=1,B=1,E=1",
"2_c1"="A=0,B=0,E=0",
"2_c2"="A=0,B=1,E=0",
"2_c3"="A=1,B=0,E=0",
"2_c4"="A=1,B=1,E=0",
"2_c5"="A=1,B=1,E=1",
"2_d1"="A=0,B=0,E=0",
"2_d2"="A=0,B=1,E=0",
"2_d3"="A=0,B=1,E=1",
"2_d4"="A=1,B=0,E=0",
"2_d5"="A=1,B=0,E=1",
"2_d6"="A=1,B=1,E=0",
"2_d7"="A=1,B=1,E=1",
"3_c1"="A=0,B=0,E=0",
"3_c2"="A=0,B=1,E=0",
"3_c3"="A=1,B=0,E=0",
"3_c4"="A=1,B=1,E=0",
"3_c5"="A=1,B=1,E=1",
"3_d1"="A=0,B=0,E=0",
"3_d2"="A=0,B=1,E=0",
"3_d3"="A=0,B=1,E=1",
"3_d4"="A=1,B=0,E=0",
"3_d5"="A=1,B=0,E=1",
"3_d6"="A=1,B=1,E=0",
"3_d7"="A=1,B=1,E=1")
df$trial_structure_type <- recode(df$trial_id,
"1_c1"="Conjunctive: A=0,B=0,E=0",
"1_c2"="Conjunctive: A=0,B=1,E=0",
"1_c3"="Conjunctive: A=1,B=0,E=0",
"1_c4"="Conjunctive: A=1,B=1,E=0",
"1_c5"="Conjunctive: A=1,B=1,E=1",
"1_d1"="Disjunctive: A=0,B=0,E=0",
"1_d2"="Disjunctive: A=0,B=1,E=0",
"1_d3"="Disjunctive: A=0,B=1,E=1",
"1_d4"="Disjunctive: A=1,B=0,E=0",
"1_d5"="Disjunctive: A=1,B=0,E=1",
"1_d6"="Disjunctive: A=1,B=1,E=0",
"1_d7"="Disjunctive: A=1,B=1,E=1",
"2_c1"="Conjunctive: A=0,B=0,E=0",
"2_c2"="Conjunctive: A=0,B=1,E=0",
"2_c3"="Conjunctive: A=1,B=0,E=0",
"2_c4"="Conjunctive: A=1,B=1,E=0",
"2_c5"="Conjunctive: A=1,B=1,E=1",
"2_d1"="Disjunctive: A=0,B=0,E=0",
"2_d2"="Disjunctive: A=0,B=1,E=0",
"2_d3"="Disjunctive: A=0,B=1,E=1",
"2_d4"="Disjunctive: A=1,B=0,E=0",
"2_d5"="Disjunctive: A=1,B=0,E=1",
"2_d6"="Disjunctive: A=1,B=1,E=0",
"2_d7"="Disjunctive: A=1,B=1,E=1",
"3_c1"="Conjunctive: A=0,B=0,E=0",
"3_c2"="Conjunctive: A=0,B=1,E=0",
"3_c3"="Conjunctive: A=1,B=0,E=0",
"3_c4"="Conjunctive: A=1,B=1,E=0",
"3_c5"="Conjunctive: A=1,B=1,E=1",
"3_d1"="Disjunctive: A=0,B=0,E=0",
"3_d2"="Disjunctive: A=0,B=1,E=0",
"3_d3"="Disjunctive: A=0,B=1,E=1",
"3_d4"="Disjunctive: A=1,B=0,E=0",
"3_d5"="Disjunctive: A=1,B=0,E=1",
"3_d6"="Disjunctive: A=1,B=1,E=0",
"3_d7"="Disjunctive: A=1,B=1,E=1")
df<- df %>% mutate(trial_type = factor(trial_type, levels = c("A=0,B=0,E=0",
"A=0,B=1,E=0",
"A=0,B=1,E=1",
"A=1,B=0,E=0",
"A=1,B=0,E=1",
"A=1,B=1,E=0",
"A=1,B=1,E=1")),
trial_structure_type = factor(trial_structure_type, levels = c("Conjunctive: A=1,B=1,E=1",
"Conjunctive: A=1,B=1,E=0",
"Conjunctive: A=1,B=0,E=0",
"Conjunctive: A=0,B=1,E=0",
"Conjunctive: A=0,B=0,E=0",
"Disjunctive: A=0,B=1,E=0",
"Disjunctive: A=1,B=1,E=1",
"Disjunctive: A=1,B=0,E=1",
"Disjunctive: A=0,B=1,E=1",
"Disjunctive: A=1,B=1,E=0",
"Disjunctive: A=1,B=0,E=0",
"Disjunctive: A=0,B=0,E=0")),
# NOTE THESE (ABOVE) LOOK IN THE WRONG ORDER BUT ITS JUST FOR THE PLOT
pgroup = factor(pgroup, levels = 1:3, labels = c('A=.1,Au=.5,B=.8,Bu=.5',
'A=.5,Au=.1,B=.5,Bu=.8',
'A=.1,Au=.7,B=.8,Bu=.5')),
Response = factor(node3),
Observed = factor(!Response%in%c('Au=0','Au=1','Bu=0', 'Bu=1'), levels = c(T,F)),
Variable = factor(substr(node3, 1, 1)),
#State = factor(rep(c(0,1), 144)),
Actual = factor(Actual, levels = c(FALSE, TRUE), labels = c('FALSE', 'TRUE')))
df$SE <- NA
# Need to add SE
for (i in unique(df$trial_id))
{
df$SE[df$trial_id==i]<-sqrt((df$prop[df$trial_id==i] * (1-df$prop[df$trial_id==i])) / sum(df$n[df$trial_id==i]))
}
models <- c('full',
'noAct',
'noInf',
'noSelect',
'noActnoInf',
'noActnoSelect',
'noInfnoSelect',
'noActnoInfnoSelect',
'noKind',
'noActnoKind',
'noInfnoKind',
'noKindnoSelect',
'noActnoInfnoKind',
'noActnoKindnoSelect',
'noInfnoKindnoSelect',
'noActnoInfnoKindnoSelect')
pgroups <- levels(df$pgroup)
# Define plotting function
plot_model_pgroup <- function(model_colname, pgroup_label, df) {
df_filtered <- df %>% filter(pgroup == pgroup_label)
ggplot(df_filtered, aes(x = node3, y = prop, fill = Observed, colour = Actual)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = prop-SE, ymax = prop+SE), width = .2) +
labs(
x = 'Response',
y = 'Proportion/Prediction',
title = sprintf("%s : %s", model_colname, pgroup_label)
) +
scale_fill_brewer(palette = "Set2") +
scale_colour_manual(values = c('gray', 'black')) +
geom_point(aes(y = .data[[model_colname]]), colour = 'black') +
geom_rect(
data = subset(df_filtered, trial_structure_type %in% c("Conjunctive: A=1,B=1,E=1", "Disjunctive: A=1,B=1,E=1")),
fill = NA, colour = "blue", xmin = -Inf, xmax = Inf, linewidth = 2,
ymin = -Inf, ymax = Inf
) +
facet_wrap(~trial_structure_type, ncol = 6) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.margin = margin(c(0, 0, 0, 0)),
axis.title.x = element_text(margin = margin(t = 1, r = 0, b = 0, l = 0)),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5)
)
}
plot <- plot_model_pgroup(full, 3, df)
plot <- plot_model_pgroup('full', 3, df)
print(plot)
plot <- plot_model_pgroup('full', 'A=.1,Au=.7,B=.8,Bu=.5', df)
print(plot)
plot <- plot_model_pgroup('full', 'A=.1,Au=.7,B=.8,Bu=.5', df)
print(plot)
# Define plotting function
plot_model_pgroup <- function(model_colname, pgroup_label, df) {
df_filtered <- df %>% filter(pgroup == pgroup_label)
ggplot(df_filtered, aes(x = node3, y = prop, fill = Observed, colour = Actual)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = prop-SE, ymax = prop+SE), width = .2) +
labs(
x = 'Response',
y = 'Proportion/Prediction',
title = sprintf("%s : %s", model_colname, pgroup_label)
) +
scale_fill_brewer(palette = "Set2") +
scale_colour_manual(values = c('gray', 'black')) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
geom_point(aes(y = .data[[model_colname]]), colour = 'black') +
geom_rect(
data = subset(df_filtered, trial_structure_type %in% c("Conjunctive: A=1,B=1,E=1", "Disjunctive: A=1,B=1,E=1")),
fill = NA, colour = "blue", xmin = -Inf, xmax = Inf, linewidth = 2,
ymin = -Inf, ymax = Inf
) +
facet_wrap(~trial_structure_type, ncol = 6) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.margin = margin(c(0, 0, 0, 0)),
axis.title.x = element_text(margin = margin(t = 1, r = 0, b = 0, l = 0)),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5)
)
}
plot <- plot_model_pgroup('full', 'A=.1,Au=.7,B=.8,Bu=.5', df)
print(plot)
# Define plotting function
plot_model_pgroup <- function(model_colname, pgroup_label, df) {
df_filtered <- df %>% filter(pgroup == pgroup_label, Actual!=NA)
ggplot(df_filtered, aes(x = node3, y = prop, fill = Observed, colour = Actual)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = prop-SE, ymax = prop+SE), width = .2) +
labs(
x = 'Response',
y = 'Proportion/Prediction',
title = sprintf("%s : %s", model_colname, pgroup_label)
) +
scale_fill_brewer(palette = "Set2") +
scale_colour_manual(values = c('gray', 'black')) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
geom_point(aes(y = .data[[model_colname]]), colour = 'black') +
geom_rect(
data = subset(df_filtered, trial_structure_type %in% c("Conjunctive: A=1,B=1,E=1", "Disjunctive: A=1,B=1,E=1")),
fill = NA, colour = "blue", xmin = -Inf, xmax = Inf, linewidth = 2,
ymin = -Inf, ymax = Inf
) +
facet_wrap(~trial_structure_type, ncol = 6) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.margin = margin(c(0, 0, 0, 0)),
axis.title.x = element_text(margin = margin(t = 1, r = 0, b = 0, l = 0)),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5)
)
}
plot <- plot_model_pgroup('full', 'A=.1,Au=.7,B=.8,Bu=.5', df)
print(plot)
View(df)
df$Actual[df$Actual==NA] <- FALSE
View(df)
df$Actual[is.na(df$Actual)] <- FALSE
View(df)
plot <- plot_model_pgroup('full', 'A=.1,Au=.7,B=.8,Bu=.5', df)
print(plot)
# Define plotting function
plot_model_pgroup <- function(model_colname, pgroup_label, df) {
df_filtered <- df %>% filter(pgroup == pgroup_label) +
ggplot(df_filtered, aes(x = node3, y = prop, fill = Observed, colour = Actual)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = prop-SE, ymax = prop+SE), width = .2) +
labs(
x = 'Response',
y = 'Proportion/Prediction',
title = sprintf("%s : %s", model_colname, pgroup_label)
) +
scale_fill_brewer(palette = "Set2") +
scale_colour_manual(values = c('gray', 'black')) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
geom_point(aes(y = .data[[model_colname]]), colour = 'black') +
geom_rect(
data = subset(df_filtered, trial_structure_type %in% c("Conjunctive: A=1,B=1,E=1", "Disjunctive: A=1,B=1,E=1")),
fill = NA, colour = "blue", xmin = -Inf, xmax = Inf, linewidth = 2,
ymin = -Inf, ymax = Inf
) +
facet_wrap(~trial_structure_type, ncol = 6) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.margin = margin(c(0, 0, 0, 0)),
axis.title.x = element_text(margin = margin(t = 1, r = 0, b = 0, l = 0)),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5)
)
}
plot <- plot_model_pgroup('full', 'A=.1,Au=.7,B=.8,Bu=.5', df)
# Define plotting function
plot_model_pgroup <- function(model_colname, pgroup_label, df) {
df_filtered <- df %>% filter(pgroup == pgroup_label)
ggplot(df_filtered, aes(x = node3, y = prop, fill = Observed, colour = Actual)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = prop-SE, ymax = prop+SE), width = .2) +
labs(
x = 'Response',
y = 'Proportion/Prediction',
title = sprintf("%s : %s", model_colname, pgroup_label)
) +
scale_fill_brewer(palette = "Set2") +
scale_colour_manual(values = c('gray', 'black')) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
geom_point(aes(y = .data[[model_colname]]), colour = 'black') +
geom_rect(
data = subset(df_filtered, trial_structure_type %in% c("Conjunctive: A=1,B=1,E=1", "Disjunctive: A=1,B=1,E=1")),
fill = NA, colour = "blue", xmin = -Inf, xmax = Inf, linewidth = 2,
ymin = -Inf, ymax = Inf
) +
facet_wrap(~trial_structure_type, ncol = 6) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.margin = margin(c(0, 0, 0, 0)),
axis.title.x = element_text(margin = margin(t = 1, r = 0, b = 0, l = 0)),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5)
)
}
plot <- plot_model_pgroup('full', 'A=.1,Au=.7,B=.8,Bu=.5', df)
print(plot)
# Define NEW plotting function specifically for reporting, with no (better?) title
plot_model_pgroup2 <- function(model_colname, pgroup_label, df) {
df_filtered <- df %>% filter(pgroup == pgroup_label)
ggplot(df_filtered, aes(x = node3, y = prop, fill = Observed, colour = Actual)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = prop-SE, ymax = prop+SE), width = .2) +
labs(
x = 'Response',
y = 'Proportion/Prediction',
title = sprintf("Model %s : %s", model_colname, pgroup_label)
) +
scale_fill_brewer(palette = "Set2") +
scale_colour_manual(values = c('gray', 'black')) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
geom_point(aes(y = .data[[model_colname]]), colour = 'black') +
geom_rect(
data = subset(df_filtered, trial_structure_type %in% c("Conjunctive: A=1,B=1,E=1", "Disjunctive: A=1,B=1,E=1")),
fill = NA, colour = "blue", xmin = -Inf, xmax = Inf, linewidth = 2,
ymin = -Inf, ymax = Inf
) +
facet_wrap(~trial_structure_type, ncol = 6) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.margin = margin(c(0, 0, 0, 0)),
axis.title.x = element_text(margin = margin(t = 1, r = 0, b = 0, l = 0)),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5)
)
}
plot <- plot_model_pgroup2('full', 'A=.1,Au=.7,B=.8,Bu=.5', df)
print(plot)
# Define plotting function
plot_model_pgroup <- function(model_colname, pgroup_label, df) {
df_filtered <- df %>% filter(pgroup == pgroup_label)
ggplot(df_filtered, aes(x = node3, y = prop, fill = Observed, colour = Actual)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = prop-SE, ymax = prop+SE), width = .2) +
labs(
x = 'Response',
y = 'Proportion/Prediction',
title = sprintf("Model %s : %s", model_colname, pgroup_label)
) +
scale_fill_brewer(palette = "Set2") +
scale_colour_manual(values = c('gray', 'black')) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
geom_point(aes(y = .data[[model_colname]]), colour = 'black') +
geom_rect(
data = subset(df_filtered, trial_structure_type %in% c("Conjunctive: A=1,B=1,E=1", "Disjunctive: A=1,B=1,E=1")),
fill = NA, colour = "blue", xmin = -Inf, xmax = Inf, linewidth = 2,
ymin = -Inf, ymax = Inf
) +
facet_wrap(~trial_structure_type, ncol = 6) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.margin = margin(c(0, 0, 0, 0)),
axis.title.x = element_text(margin = margin(t = 1, r = 0, b = 0, l = 0)),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5)
)
}
plot <- plot_model_pgroup('full', 'A=.1,Au=.7,B=.8,Bu=.5', df)
print(plot)
# Define plotting function
plot_model_pgroup <- function(model_colname, pgroup_label, df) {
df_filtered <- df %>% filter(pgroup == pgroup_label)
ggplot(df_filtered, aes(x = node3, y = prop, fill = Observed, colour = Actual)) +
geom_bar(stat = 'identity') +
geom_errorbar(aes(ymin = prop-SE, ymax = prop+SE), width = .2) +
labs(
x = 'Response',
y = 'Proportion/Prediction',
title = sprintf("Model %s : %s", model_colname, pgroup_label)
) +
scale_fill_brewer(palette = "Set2", labels = c("Observed \n(A|B)", "Unobserved \n(Au|Bu)")) +
scale_colour_manual(values = c('gray', 'black')) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
geom_point(aes(y = .data[[model_colname]]), colour = 'black') +
geom_rect(
data = subset(df_filtered, trial_structure_type %in% c("Conjunctive: A=1,B=1,E=1", "Disjunctive: A=1,B=1,E=1")),
fill = NA, colour = "blue", xmin = -Inf, xmax = Inf, linewidth = 2,
ymin = -Inf, ymax = Inf
) +
facet_wrap(~trial_structure_type, ncol = 6) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
legend.margin = margin(c(0, 0, 0, 0)),
axis.title.x = element_text(margin = margin(t = 1, r = 0, b = 0, l = 0)),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5)
)
}
plotf <- plot_model_pgroup('full', 'A=.1,Au=.7,B=.8,Bu=.5', df)
print(plot)
